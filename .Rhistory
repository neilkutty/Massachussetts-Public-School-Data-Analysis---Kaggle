library(MASS)
library(ggplot2)
library(ggthemes)
library(GGally)
library(magrittr)
library(imputeTS)
library(corrplot)
library(dplyr)
#
m = read.csv('massachusetts-public-schools-data/MA_Public_Schools_2017.csv')
dict = read.csv('massachusetts-public-schools-data/MA_Public_Schools_datadict.csv')
View(head(m))
library(MASS)
library(ggplot2)
library(ggthemes)
library(GGally)
library(magrittr)
library(corrplot)
library(dplyr)
library(knitr)
m = read.csv('massachusetts-public-schools-data/MA_Public_Schools_2017.csv')
# ********************************************************************************
#  --  Function: Analyze NAs  - -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #
# ********************************************************************************
na_analysis = function(df){
na_count <- as.data.frame(sapply(df, function(y) sum(is.na(y))))
names(na_count) = 'num_na'
na_count$pct_nn = (nrow(df) - na_count$num_na)/(nrow(df))
na_count$pct_na = 1 - na_count$pct_nn
na_count = na_count[order(-na_count$num_na),]
return(na_count[,c(1,3)])
}
head(kable(na_analysis(m)),20)
# ********************************************************************************
# -  -  - Prepare Correlation Data Function -------------------------------------- #
# ********************************************************************************
prep_corr_data = function(x){
#The first step is to filter for only highschools and
#  get rid of features related to 'MCAS'
hs2 = x[x$X12_Enrollment > 0, -grep("MCAS",colnames(x))]
#Next the numeric columns in the dataset are identified
nums <- sapply(hs2, is.numeric)
#Select the columns from the original to merge to the numeric only data
to_merge <- hs2[,colnames(hs2) %in% c('School.Name','School.Code')]
#Pull out all records that are numeric only
hs_corr_data <- hs2[,nums]
#Merge the to_merge and hs_corr_data dataframes
corrdat = merge(to_merge,hs_corr_data)
#Now it's time to clean the column names. First we put all
#  of the column names in it's own dataframe. This makes it
#  possible to deal with the names as we would values of a
#  column / feature.  We then make all the names lowercase
#  and remove spacing characters as well as abbreviate where
#  possible. Finally we store the new cleaned column names
#  in a list.
cornames = as.data.frame(colnames(corrdat))
colnames(cornames) = 'names'
cornames$new = tolower(gsub('X\\..','x_',cornames$names))
cornames$new2 = gsub('\\.','_',cornames$new)
cornames$new3 = gsub('progress_and_performance_index__ppi____',
'ppi_',cornames$new2)
cornames$new4 = gsub('____','',cornames$new3)
newnames = as.list(cornames$new4)
#Assign the new column names to the columns in the dataframe
colnames(corrdat) = newnames
#Use the labels brought over in the merge (School Name) as rownames
rownames(corrdat) = corrdat$school_name
#Remove unneeded columns that are numeric as well as the school id labels
# we originally retained in the merge above.
corrdat = corrdat[,!names(corrdat) %in% c('school_name','school_code',
'district_code','zip','x1_enrollment',
'x2_enrollment','x3_enrollment',
'x4_enrollment','x5_enrollment',
'x6_enrollment','x7_enrollment',
'x8_enrollment','total___of_classes',
'ap_five_or_more_tests',
'ap_four_tests','ap_three_tests',
'ap_two_tests','ap_one_test')]
#Finally remove any records that have at least one null value.
corrdat = na.omit(corrdat)
return(corrdat)
}
# ********************************************************************************
# -  -  - END - Prepare Correlation Data Function --------------------------------- #
# ********************************************************************************
c = as.data.frame(prep_corr_data(m))
head(kable(c),20)
c = as.data.frame(prep_corr_data(m))
head(c,20)
library(MASS)
library(ggplot2)
library(ggthemes)
library(GGally)
library(magrittr)
library(corrplot)
library(dplyr)
library(knitr)
m = read.csv('massachusetts-public-schools-data/MA_Public_Schools_2017.csv')
# ********************************************************************************
#  --  Function: Analyze NAs  - -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #
# ********************************************************************************
na_analysis = function(df){
na_count <- as.data.frame(sapply(df, function(y) sum(is.na(y))))
names(na_count) = 'num_na'
na_count$pct_nn = (nrow(df) - na_count$num_na)/(nrow(df))
na_count$pct_na = 1 - na_count$pct_nn
na_count = na_count[order(-na_count$num_na),]
return(na_count[,c(1,3)])
}
head(kable(na_analysis(m)),20)
# ********************************************************************************
# -  -  - Prepare Correlation Data Function -------------------------------------- #
# ********************************************************************************
prep_corr_data = function(x){
#The first step is to filter for only highschools and
#  get rid of features related to 'MCAS'
hs2 = x[x$X12_Enrollment > 0, -grep("MCAS",colnames(x))]
#Next the numeric columns in the dataset are identified
nums <- sapply(hs2, is.numeric)
#Select the columns from the original to merge to the numeric only data
to_merge <- hs2[,colnames(hs2) %in% c('School.Name','School.Code')]
#Pull out all records that are numeric only
hs_corr_data <- hs2[,nums]
#Merge the to_merge and hs_corr_data dataframes
corrdat = merge(to_merge,hs_corr_data)
#Now it's time to clean the column names. First we put all
#  of the column names in it's own dataframe. This makes it
#  possible to deal with the names as we would values of a
#  column / feature.  We then make all the names lowercase
#  and remove spacing characters as well as abbreviate where
#  possible. Finally we store the new cleaned column names
#  in a list.
cornames = as.data.frame(colnames(corrdat))
colnames(cornames) = 'names'
cornames$new = tolower(gsub('X\\..','x_',cornames$names))
cornames$new2 = gsub('\\.','_',cornames$new)
cornames$new3 = gsub('progress_and_performance_index__ppi____',
'ppi_',cornames$new2)
cornames$new4 = gsub('____','',cornames$new3)
newnames = as.list(cornames$new4)
#Assign the new column names to the columns in the dataframe
colnames(corrdat) = newnames
#Use the labels brought over in the merge (School Name) as rownames
rownames(corrdat) = corrdat$school_name
#Remove unneeded columns that are numeric as well as the school id labels
# we originally retained in the merge above.
corrdat = corrdat[,!names(corrdat) %in% c('school_name','school_code',
'district_code','zip','x1_enrollment',
'x2_enrollment','x3_enrollment',
'x4_enrollment','x5_enrollment',
'x6_enrollment','x7_enrollment',
'x8_enrollment','total___of_classes',
'ap_five_or_more_tests',
'ap_four_tests','ap_three_tests',
'ap_two_tests','ap_one_test')]
#Finally remove any records that have at least one null value.
corrdat = na.omit(corrdat)
return(corrdat)
}
# ********************************************************************************
# -  -  - END - Prepare Correlation Data Function --------------------------------- #
# ********************************************************************************
c = as.data.frame(prep_corr_data(m))
kable(head(c,10)) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
install.packages("kableExtra")
c = as.data.frame(prep_corr_data(m))
kable(head(c,10)) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
library(kableExtra)
c = as.data.frame(prep_corr_data(m))
kable(head(c,10)) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
# ********************************************************************************
#  --  Function: Analyze NAs  - -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #
# ********************************************************************************
na_analysis = function(df){
na_count <- as.data.frame(sapply(df, function(y) sum(is.na(y))))
names(na_count) = 'num_na'
na_count$pct_nn = (nrow(df) - na_count$num_na)/(nrow(df))
na_count$pct_na = 1 - na_count$pct_nn
na_count = na_count[order(-na_count$num_na),]
return(na_count[,c(1,3)])
}
kable(head(na_analysis(m),10)) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
?kable_styling
c = as.data.frame(prep_corr_data(m))
kable(head(c[,1:5],10)) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "float_left")
num_data = as.data.frame(prep_corr_data(m))
kable(head(num_data[,1:5],10)) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "float_left")
nf = num_data[,!colnames(num_data) %in% 'School.Name']
corr_dat = cor(nf[,!colnames(nf) %in% c('x_graduated','x12_enrollment')], y = nf$x_graduated)
corr_dat = as.data.frame(corr_dat)
colnames(corr_dat) = 'cor'
rownames(corr_dat) = rownames(corr)
nf = num_data[,!colnames(num_data) %in% 'School.Name']
corr_dat = cor(nf[,!colnames(nf) %in% c('x_graduated','x12_enrollment')], y = nf$x_graduated)
corr_dat = as.data.frame(corr_dat)
colnames(corr_dat) = 'cor'
rownames(corr_dat) = rownames(corr_dat)
corr_dat$cor = round(corr_dat$cor,3)
v = corr_dat
#Correlation to Outcome Graph
ggplot(corr_dat, aes(x=reorder(rownames(corr_dat),cor), y=cor, label=cor, fill=cor)) +
geom_bar(stat = 'identity', alpha = 0.78)+
scale_fill_gradient(low = "salmon", high = "seagreen")+
labs(x = "Variable", y = "Correlation to % of Graduating Students") +
ggtitle("How Strongly Correlated are Students' Performance Scores to Graduation Rates?",
subtitle = "Across 296 Massachussetts Highschools") +
geom_label(aes(fill = corr_dat$cor), colour = "white", fontface = "bold")+
coord_flip()+
theme_hc()+
guides(fill = FALSE)+
theme(axis.line = element_blank(),
axis.text.y = element_text(size=14),
panel.grid.major.y = element_line(colour = 'lightblue', linetype = 2),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.background = element_rect(fill = "white")
)+
annotate("text", label = "SAT Scores show the strongest\n postive correlation to Graduation Rate (%).",
x = 7.3, y = -0.19, size = 4.2, colour = "black")#+
# annotate("text", label = "More variables must be accounted for.",
#          x = 3.2, y = -0.3, size = 4, colour = "black")
#Correlation to Outcome Graph
ggplot(corr_dat, aes(x=reorder(rownames(corr_dat),cor), y=cor, label=cor, fill=cor)) +
geom_bar(stat = 'identity', alpha = 0.78)+
scale_fill_gradient(low = "salmon", high = "seagreen")+
labs(x = "Variable", y = "Correlation to % of Graduating Students") +
ggtitle("How Strongly Correlated are Students' Performance Scores to Graduation Rates?",
subtitle = "Across 296 Massachussetts Highschools") +
geom_label(aes(fill = corr_dat$cor), colour = "white", fontface = "bold")+
coord_flip()+
theme_hc()+
guides(fill = FALSE)+
theme(axis.line = element_blank(),
axis.text.y = element_text(size=14),
panel.grid.major.y = element_line(colour = 'lightblue', linetype = 2),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.background = element_rect(fill = "white")
)+
annotate("text", label = "SAT Scores show the strongest\n postive correlation to Graduation Rate (%).",
x = 7.3, y = -0.19, size = 4.2, colour = "black")#+
# annotate("text", label = "More variables must be accounted for.",
#          x = 3.2, y = -0.3, size = 4, colour = "black")
#Correlation to Outcome Graph
ggplot(corr_dat[corr_dat$cor>0.5,], aes(x=reorder(rownames(corr_dat),cor), y=cor, label=cor, fill=cor)) +
geom_bar(stat = 'identity', alpha = 0.78)+
scale_fill_gradient(low = "salmon", high = "seagreen")+
labs(x = "Variable", y = "Correlation to % of Graduating Students") +
ggtitle("How Strongly Correlated are Students' Performance Scores to Graduation Rates?",
subtitle = "Across 296 Massachussetts Highschools") +
geom_label(aes(fill = corr_dat$cor), colour = "white", fontface = "bold")+
coord_flip()+
theme_hc()+
guides(fill = FALSE)+
theme(axis.line = element_blank(),
axis.text.y = element_text(size=14),
panel.grid.major.y = element_line(colour = 'lightblue', linetype = 2),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.background = element_rect(fill = "white")
)+
annotate("text", label = "SAT Scores show the strongest\n postive correlation to Graduation Rate (%).",
x = 7.3, y = -0.19, size = 4.2, colour = "black")#+
#Correlation to Outcome Graph
ggplot(corr_dat[(corr_dat$cor>0.5),], aes(x=reorder(rownames(corr_dat),cor), y=cor, label=cor, fill=cor)) +
geom_bar(stat = 'identity', alpha = 0.78)+
scale_fill_gradient(low = "salmon", high = "seagreen")+
labs(x = "Variable", y = "Correlation to % of Graduating Students") +
ggtitle("How Strongly Correlated are Students' Performance Scores to Graduation Rates?",
subtitle = "Across 296 Massachussetts Highschools") +
geom_label(aes(fill = corr_dat$cor), colour = "white", fontface = "bold")+
coord_flip()+
theme_hc()+
guides(fill = FALSE)+
theme(axis.line = element_blank(),
axis.text.y = element_text(size=14),
panel.grid.major.y = element_line(colour = 'lightblue', linetype = 2),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.background = element_rect(fill = "white")
)+
annotate("text", label = "SAT Scores show the strongest\n postive correlation to Graduation Rate (%).",
x = 7.3, y = -0.19, size = 4.2, colour = "black")#+
#Retrieve only variables that have a correlation greater than 0.5 to
#  the outcome variable (graduation rate(%))
corr_dat = corr_dat[corr_dat$cor>0.5,]
#Retrieve only variables that have a correlation greater than 0.5 to
#  the outcome variable (graduation rate(%))
corr_dat = as.data.frame(corr_dat[corr_dat$cor>0.5,])
corr_dat = cor(nf[,!colnames(nf) %in% c('x_graduated','x12_enrollment')], y = nf$x_graduated)
corr_dat = as.data.frame(corr_dat)
colnames(corr_dat) = 'cor'
rownames(corr_dat) = rownames(corr_dat)
View(corr_dat)
#Retrieve only variables that have a correlation greater than 0.5 to
#  the outcome variable (graduation rate(%))
corr_dat = as.data.frame(corr_dat[corr_dat$cor>0.5,])
#Correlation to Outcome Graph
ggplot(corr_dat, aes(x=reorder(rownames(corr_dat),cor), y=cor, label=cor, fill=cor)) +
geom_bar(stat = 'identity', alpha = 0.78)+
scale_fill_gradient(low = "salmon", high = "seagreen")+
labs(x = "Variable", y = "Correlation to % of Graduating Students") +
ggtitle("How Strongly Correlated are Students' Performance Scores to Graduation Rates?",
subtitle = "Across 296 Massachussetts Highschools") +
geom_label(aes(fill = corr_dat$cor), colour = "white", fontface = "bold")+
coord_flip()+
theme_hc()+
guides(fill = FALSE)+
theme(axis.line = element_blank(),
axis.text.y = element_text(size=14),
panel.grid.major.y = element_line(colour = 'lightblue', linetype = 2),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.background = element_rect(fill = "white")
)+
annotate("text", label = "SAT Scores show the strongest\n postive correlation to Graduation Rate (%).",
x = 7.3, y = -0.19, size = 4.2, colour = "black")#+
#Retrieve only variables that have a correlation greater than 0.5 to
#  the outcome variable (graduation rate(%))
corr_dat = as.data.frame(corr_dat[corr_dat$cor>0.5,])
#Correlation to Outcome Graph
ggplot(corr_dat, aes(x=reorder(rownames(corr_dat),cor), y=cor, label=cor, fill=cor)) +
geom_bar(stat = 'identity', alpha = 0.78)+
scale_fill_gradient(low = "salmon", high = "seagreen")+
labs(x = "Variable", y = "Correlation to % of Graduating Students") +
ggtitle("How Strongly Correlated are Students' Performance Scores to Graduation Rates?",
subtitle = "Across 296 Massachussetts Highschools") +
geom_label(aes(fill = corr_dat$cor), colour = "white", fontface = "bold")+
coord_flip()+
theme_hc()+
guides(fill = FALSE)+
theme(axis.line = element_blank(),
axis.text.y = element_text(size=14),
panel.grid.major.y = element_line(colour = 'lightblue', linetype = 2),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.background = element_rect(fill = "white")
)+
annotate("text", label = "SAT Scores show the strongest\n postive correlation to Graduation Rate (%).",
x = 7.3, y = -0.19, size = 4.2, colour = "black")#+
#Retrieve only variables that have a correlation greater than 0.5 to
#  the outcome variable (graduation rate(%))
corr_dat = as.data.frame(corr_dat[corr_dat$cor>0.5,])
#Correlation to Outcome Graph
ggplot(corr_dat, aes(x=reorder(rownames(corr_dat),cor), y=cor, label=cor, fill=cor)) +
geom_bar(stat = 'identity', alpha = 0.78)+
scale_fill_gradient(low = "salmon", high = "seagreen")+
labs(x = "Variable", y = "Correlation to % of Graduating Students") +
ggtitle("How Strongly Correlated are Students' Performance Scores to Graduation Rates?",
subtitle = "Across 296 Massachussetts Highschools") +
geom_label(aes(fill = corr_dat$cor), colour = "white", fontface = "bold")+
coord_flip()+
theme_hc()+
guides(fill = FALSE)+
theme(axis.line = element_blank(),
axis.text.y = element_text(size=14),
panel.grid.major.y = element_line(colour = 'lightblue', linetype = 2),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.background = element_rect(fill = "white")
)+
annotate("text", label = "SAT Scores show the strongest\n postive correlation to Graduation Rate (%).",
x = 7.3, y = -0.19, size = 4.2, colour = "black")#+
#Retrieve only variables that have a correlation greater than 0.5 to
#  the outcome variable (graduation rate(%))
corr_dat = as.data.frame(corr_dat[corr_dat$cor>0.5,])
ggplot(corr_dat, aes(x=reorder(rownames(corr_dat),cor), y=cor, label=cor, fill=cor)) +
geom_bar(stat = 'identity', alpha = 0.78)+
scale_fill_gradient(low = "salmon", high = "seagreen")+
labs(x = "Variable", y = "Correlation to % of Graduating Students") +
ggtitle("How Strongly Correlated are Students' Performance Scores to Graduation Rates?",
subtitle = "Across 296 Massachussetts Highschools") +
geom_label(aes(fill = corr_dat$cor), colour = "white", fontface = "bold")+
coord_flip()+
theme_hc()+
guides(fill = FALSE)+
theme(axis.line = element_blank(),
axis.text.y = element_text(size=14),
panel.grid.major.y = element_line(colour = 'lightblue', linetype = 2),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.background = element_rect(fill = "white")
)+
annotate("text", label = "SAT Scores show the strongest\n postive correlation to Graduation Rate (%).",
x = 7.3, y = -0.19, size = 4.2, colour = "black")#+
ggplot(corr_dat, aes(x=reorder(rownames(corr_dat),cor), y=cor, label=cor, fill=cor)) +
geom_bar(stat = 'identity', alpha = 0.78)+
scale_fill_gradient(low = "salmon", high = "seagreen")+
labs(x = "Variable", y = "Correlation to % of Graduating Students") +
ggtitle("How Strongly Correlated are Students' Performance Scores to Graduation Rates?",
subtitle = "Across 296 Massachussetts Highschools") +
geom_label(aes(fill = corr_dat$cor), colour = "white", fontface = "bold")+
coord_flip()+
theme_hc()+
guides(fill = FALSE)+
theme(axis.line = element_blank(),
axis.text.y = element_text(size=14),
panel.grid.major.y = element_line(colour = 'lightblue', linetype = 2),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.background = element_rect(fill = "white")
)+
annotate("text", label = "SAT Scores show the strongest\n postive correlation to Graduation Rate (%).",
x = 7.3, y = -0.19, size = 4.2, colour = "black")#+
#Retrieve only variables that have a correlation greater than 0.5 to
#  the outcome variable (graduation rate(%))
corr_dat = as.data.frame(corr_dat[corr_dat$cor>0.5,])
#Correlation to Outcome Graph
ggplot(corr_dat, aes(x=reorder(rownames(corr_dat),cor), y=cor, label=cor, fill=cor)) +
geom_bar(stat = 'identity', alpha = 0.78)+
scale_fill_gradient(low = "salmon", high = "seagreen")+
labs(x = "Variable", y = "Correlation to % of Graduating Students") +
ggtitle("How Strongly Correlated are Students' Performance Scores to Graduation Rates?",
subtitle = "Across 296 Massachussetts Highschools") +
geom_label(aes(fill = corr_dat$cor), colour = "white", fontface = "bold")+
coord_flip()+
theme_hc()+
guides(fill = FALSE)+
theme(axis.line = element_blank(),
axis.text.y = element_text(size=14),
panel.grid.major.y = element_line(colour = 'lightblue', linetype = 2),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.background = element_rect(fill = "white")
)+
annotate("text", label = "SAT Scores show the strongest\n postive correlation to Graduation Rate (%).",
x = 7.3, y = -0.19, size = 4.2, colour = "black")#+
rownames(corr_dat)
View(corr_dat)
nf = num_data[,!colnames(num_data) %in% 'School.Name']
corr_dat = cor(nf[,!colnames(nf) %in% c('x_graduated','x12_enrollment')], y = nf$x_graduated)
corr_dat = as.data.frame(corr_dat)
colnames(corr_dat) = 'cor'
rownames(corr_dat) = rownames(corr_dat)
corr_dat$cor = round(corr_dat$cor,3)
v = corr_dat
#Retrieve only variables that have a correlation greater than 0.5 to
#  the outcome variable (graduation rate(%))
#corr_dat = as.data.frame(corr_dat[corr_dat$cor>0.5,])
rownames(corr_dat)
#Correlation to Outcome Graph
ggplot(corr_dat, aes(x=reorder(rownames(corr_dat),cor), y=cor, label=cor, fill=cor)) +
geom_bar(stat = 'identity', alpha = 0.78)+
scale_fill_gradient(low = "salmon", high = "seagreen")+
labs(x = "Variable", y = "Correlation to % of Graduating Students") +
ggtitle("How Strongly Correlated are Students' Performance Scores to Graduation Rates?",
subtitle = "Across 296 Massachussetts Highschools") +
geom_label(aes(fill = corr_dat$cor), colour = "white", fontface = "bold")+
coord_flip()+
theme_hc()+
guides(fill = FALSE)+
theme(axis.line = element_blank(),
axis.text.y = element_text(size=14),
panel.grid.major.y = element_line(colour = 'lightblue', linetype = 2),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.background = element_rect(fill = "white")
)+
annotate("text", label = "SAT Scores show the strongest\n postive correlation to Graduation Rate (%).",
x = 7.3, y = -0.19, size = 4.2, colour = "black")#+
# annotate("text", label = "More variables must be accounted for.",
#          x = 3.2, y = -0.3, size = 4, colour = "black")
